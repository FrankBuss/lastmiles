dbug : op1 = ( 0, 1 )
     : op2 = ( 0, 1 )
     : opr = op1 * op2 = ( -1, 0 )
     :     should be i^2 = -1

dbug : op1 = ( 1, 0 )
     : op2 = ( 0, 1 )
     : opr = op1 * op2 = ( 0, 1 )
     :     should be 1i

dbug : op1 = ( -1, 0 )
     : op2 = ( 0, 0 )
     : opr = op1 * op2 = ( 0, 0 )
     :     should be just zero.

dbug : op1 = ( 4, 3 )
     : op2 = ( 2, -1 )
dbug : opr = op1 / op2 = ( 1, 2 )
     :     should be 1 + 2i

dbug : op1 = ( 4, 3 )
     : op2 = ( -4, -12 )
dbug : opr = op1 / op2 = ( -0.325, 0.225 )
     :     should be -0.325 + 0.225i

dbug : op1 = ( 2, 1 )
     :     theta = 4.636476090008e-01

dbug : op1 = ( 4, 3 )
     :     theta = 6.435011087933e-01
     : opr = op1^2 = ( 7, 24 )
     :     should be 7 + 24i
     :     magnitude is 25
     :     theta = 1.287002217587e+00
     : now we take the square root(s) of opr
root : 1 is ( 4.000000000000e+00, 3.000000000000e+00 )
root : 2 is ( -4.000000000000e+00, -3.000000000000e+00 )
     : csqrt returns ( 4.000000000000e+00, 3.000000000000e+00 )
     : we should get back ( 4, 3i ) and ( -4, -3i ).

dbug : square root test
dbug : op1 = ( 0, 1 )
     :     theta = 1.570796326795e+00
     :     magnitude is 1
root : 1 = ( 7.071067811865e-01, 7.071067811865e-01 )
root : 2 = ( -7.071067811865e-01, -7.071067811865e-01 )

dbug : cube root test
     : op1 = ( -11, 2 )
     :     theta = 2.961739153797e+00
     :     magnitude is 11.1803
root : 1 = ( 1.232050807569e+00, 1.866025403784e+00 )
root : 2 = ( -2.232050807569e+00, 1.339745962156e-01 )
root : 3 = ( 1.000000000000e+00, -2.000000000000e+00 )


Test the complex vector magnitude
dbug : v1 = < ( 1, 1 ), ( 2, 2 ), ( 3, 3 ) >
     : |v1| = 5.291502622129e+00
     : Should be 5.2915026221291

     : v2 = < ( -1, -1 ), ( -2, -2 ), ( 3, -3 ) >
Lets test vector dot product
     : dot product = ( 18, -10 )

Lets test vector cross product
     : v1 X v2 = < ( 12, 12 ), ( -6, -6 ), ( 0, 0 ) >
Lets test vector normalization of v[0] as described.
    : function call cplex_vec_normalize() returns 0
    : |v[0]| =  < ( 1.889822365046e-01, 1.889822365046e-01 ),
   ( 3.779644730092e-01, 3.779644730092e-01 ),
   ( 5.669467095138e-01, 5.669467095138e-01 ) >
Should be < ( 0.1889822365046 + 0.1889822365046 i ),
            ( 0.3779644730092 + 0.3779644730092 i ),
            ( 0.5669467095138 + 0.5669467095138 i )>

Quadratic x^2 - 9 * x + 14 = 0
Real root count = 2
Quadratic result 1 = ( 7.000000000000e+00, 0.000000000000e+00 )
          result 2 = ( 2.000000000000e+00, 0.000000000000e+00 )

Quadratic x^2 + 5 * x - 14 = 0
Real root count = 2
Quadratic result 1 = ( 2.000000000000e+00, 0.000000000000e+00 )
          result 2 = ( -7.000000000000e+00, 0.000000000000e+00 )

Quadratic x^2 - 5 * x + 14 = 0
Real root count = 0
Quadratic result 1 = ( 2.500000000000e+00, 2.783882181415e+00 )
          result 2 = ( 2.500000000000e+00, -2.783882181415e+00 )



Quadratic 2 * x^2 - 5 * x - 1 = 0
Real root count = 2
Quadratic result 1 = ( 2.686140661635e+00, 0.000000000000e+00 )
          result 2 = ( -1.861406616345e-01, 0.000000000000e+00 )

DBUG : ***********************************************

DBUG : 201920191111020747
DBUG : potapeno: has a counter example which may toss
DBUG :           a monkey wrench into the workings
Quadratic ( 1 + i ) * x^2 - ( 2 + i ) * x + 1 = 0
Real root count = 1
Quadratic result 1 = ( 1.000000000000e+00, 0.000000000000e+00 )
          result 2 = ( 5.000000000000e-01, -5.000000000000e-01 )


-----------------------------------------------------

Determinant stuff follows 
dbug : row 1 = < ( 1, 0 ), ( 2, 0 ), ( 3, 0 ) >
     : row 2 = < ( 4, 0 ), ( 5, 0 ), ( 6, 0 ) >
     : row 3 = < ( 7, 0 ), ( 8, 0 ), ( 9, 0 ) >
     : det = ( 0, 0 )

-----------------------------------------------------
New Row data on row1 
dbug : row 1 = < ( 10, 0 ), ( -2, 0 ), ( -3, 0 ) >
     : row 2 = < ( 4, 0 ), ( 5, 0 ), ( 6, 0 ) >
     : row 3 = < ( 7, 0 ), ( 8, 0 ), ( 9, 0 ) >
     : det = ( -33, 0 )

-----------------------------------------------------
Complex row data in row1 and row 3
dbug : row 1 = < ( 0.5, -1 ), ( -2, 0 ), ( -3, 0 ) >
     : row 2 = < ( 4, 0 ), ( 5, 0 ), ( 6, 0 ) >
     : row 3 = < ( 7, 0 ), ( -2, 4 ), ( 9, 0 ) >
     : det = ( 121.5, -117 )

-----------------------------------------------------
Cramers method test where we solve for A,B,C where :
    ( 0.5 - i ) * A  - 2 * B - 3 * C = ( 1 + 0.5i ),
    4 * A + 5 * B + 6 * C = ( 2 + 0.75i ),
    7 * A + ( -2 + 4i ) * B + 9 * C = ( 3 -0.25i ).
     : result col = < ( +5.857651245552e-01, +5.455516014235e-01 ),
                      ( -1.992882562278e-02, +1.937722419929e-01 ),
                      ( -4.056939501779e-02, -4.001779359431e-01 ) >



--------------------------------------------------
INFO : the line is in the plane. k is zero.
INFO : line_plane_icept() returns 0


--------------------------------------------------
INFO : test the line point and plane point are same
     : u = NULL pointer
     : v = NULL pointer
    k = +0.0000000000000000e+00
    s = -0.0000000000000000e+00
    t = -0.0000000000000000e+00


    icept_pt = lp0 + k * norm[ lpr ]
             = < +0.000000000e+00, +6.000000000e+00, +3.000000000e+00 >

    icept_pt = pl0 + s * plun + t * plvn
             = < +0.000000000e+00, +6.000000000e+00, +3.000000000e+00 >
INFO : line_plane_icept() returns 1
     : intercept = ( +0.000000000e+00, +6.000000000e+00, +3.000000000e+00 )


--------------------------------------------------


--------------------------------------------------
     : u = NULL pointer
     : v = NULL pointer
    k = +5.7154760664940829e+00
    s = -3.1433011119429657e+00
    t = +3.4591634777518065e-01


    icept_pt = lp0 + k * norm[ lpr ]
             = < -3.333333333e-01, +7.666666667e+00, +3.333333333e-01 >

    icept_pt = pl0 + s * plun + t * plvn
             = < -3.333333333e-01, +7.666666667e+00, +3.333333333e-01 >
INFO : line_plane_icept() returns 1
     : intercept = ( -3.333333333e-01, +7.666666667e+00, +3.333333333e-01 )


--------------------------------------------------


INFO : line_plane_icept() again
     : with zero mag plane_u and plane_v

     : u = +0.000000000e+00    +0.000000000e+00    +0.000000000e+00
     : v = +0.000000000e+00    +0.000000000e+00    +0.000000000e+00

    k = +5.7154760664940829e+00
    s = -3.1433011119429657e+00
    t = +3.4591634777518065e-01


    icept_pt = lp0 + k * norm[ lpr ]
             = < -3.333333333e-01, +7.666666667e+00, +3.333333333e-01 >

    icept_pt = pl0 + s * plun + t * plvn
             = < -3.333333333e-01, +7.666666667e+00, +3.333333333e-01 >
     : line_plane_icept() returns 1

     : intercept = ( -3.333333333e-01, +7.666666667e+00, +3.333333333e-01 )


--------------------------------------------------


INFO : line_plane_icept() again
     : with microscopic plane_v and zero plane_u
     : u = +0.000000000e+00    +0.000000000e+00    +0.000000000e+00
     : v = -9.636241117e-12    -2.223747950e-12    -1.482498633e-12

    k = +5.7154760664940829e+00
    s = -3.1433011119429657e+00
    t = +3.4591634777518065e-01


    icept_pt = lp0 + k * norm[ lpr ]
             = < -3.333333333e-01, +7.666666667e+00, +3.333333333e-01 >

    icept_pt = pl0 + s * plun + t * plvn
             = < -3.333333333e-01, +7.666666667e+00, +3.333333333e-01 >
     : line_plane_icept() returns 1

     : intercept = ( -3.333333333e-01, +7.666666667e+00, +3.333333333e-01 )


--------------------------------------------------


INFO : line_plane_icept() again
     : with microscopic plane_v NOT in the plane
     : as well as a zero plane_u
     : u = +0.000000000e+00    +0.000000000e+00    +0.000000000e+00
     : v = -9.636241117e-12    +2.223747950e-12    +1.482498633e-12

    k = +5.7154760664940829e+00
    s = -3.1433011119429657e+00
    t = +3.4591634777518065e-01


    icept_pt = lp0 + k * norm[ lpr ]
             = < -3.333333333e-01, +7.666666667e+00, +3.333333333e-01 >

    icept_pt = pl0 + s * plun + t * plvn
             = < -3.333333333e-01, +7.666666667e+00, +3.333333333e-01 >
     : line_plane_icept() returns 1

     : intercept = ( -3.333333333e-01, +7.666666667e+00, +3.333333333e-01 )


--------------------------------------------------


INFO : line_plane_icept() again
     : with microscopic plane_u and zero plane_v
     : u = +0.000000000e+00    -5.547001962e-12    +8.320502943e-12
     : v = +0.000000000e+00    +0.000000000e+00    +0.000000000e+00

    k = +5.7154760664940829e+00
    s = -3.1433011119429657e+00
    t = +3.4591634777518065e-01


    icept_pt = lp0 + k * norm[ lpr ]
             = < -3.333333333e-01, +7.666666667e+00, +3.333333333e-01 >

    icept_pt = pl0 + s * plun + t * plvn
             = < -3.333333333e-01, +7.666666667e+00, +3.333333333e-01 >
     : line_plane_icept() returns 1

     : intercept = ( -3.333333333e-01, +7.666666667e+00, +3.333333333e-01 )


--------------------------------------------------


INFO : line_plane_icept() again
     : with microscopic and invalid plane_u
     : also a zero plane_v
     : u = +1.000000000e-09    -5.547001962e-12    +8.320502943e-12
     : v = +0.000000000e+00    +0.000000000e+00    +0.000000000e+00

    k = +5.7154760664940829e+00
    s = -3.1433011119429657e+00
    t = +3.4591634777518065e-01


    icept_pt = lp0 + k * norm[ lpr ]
             = < -3.333333333e-01, +7.666666667e+00, +3.333333333e-01 >

    icept_pt = pl0 + s * plun + t * plvn
             = < -3.333333333e-01, +7.666666667e+00, +3.333333333e-01 >
     : line_plane_icept() returns 1

     : intercept = ( -3.333333333e-01, +7.666666667e+00, +3.333333333e-01 )


--------------------------------------------------


INFO : line_plane_icept() again
     : with perfect plane_u
     : also a microscopic plane_v
     : u = +0.000000000e+00    -5.547001962e-01    +8.320502943e-01
     : v = -9.636241117e-15    -2.223747950e-15    -1.482498633e-15

    k = +5.7154760664940829e+00
    s = -3.1433011119429657e+00
    t = +3.4591634777518065e-01


    icept_pt = lp0 + k * norm[ lpr ]
             = < -3.333333333e-01, +7.666666667e+00, +3.333333333e-01 >

    icept_pt = pl0 + s * plun + t * plvn
             = < -3.333333333e-01, +7.666666667e+00, +3.333333333e-01 >
     : line_plane_icept() returns 1

     : intercept = ( -3.333333333e-01, +7.666666667e+00, +3.333333333e-01 )


--------------------------------------------------


INFO : line_plane_icept()
     : with perfect plane_u
     : also perfect plane_v
     : u = +0.000000000e+00    -5.547001962e-01    +8.320502943e-01
     : v = -9.636241117e-01    -2.223747950e-01    -1.482498633e-01

    k = +5.7154760664940829e+00
    s = -3.1433011119429657e+00
    t = +3.4591634777518065e-01


    icept_pt = lp0 + k * norm[ lpr ]
             = < -3.333333333e-01, +7.666666667e+00, +3.333333333e-01 >

    icept_pt = pl0 + s * plun + t * plvn
             = < -3.333333333e-01, +7.666666667e+00, +3.333333333e-01 >
     : line_plane_icept() returns 1

     : intercept = ( -3.333333333e-01, +7.666666667e+00, +3.333333333e-01 )


--------------------------------------------------


INFO : line_plane_icept()
     : with not normalized plane_u
     : also perfect plane_v
     : u = +0.000000000e+00    -2.000000000e+00    +3.000000000e+00
     : v = -9.636241117e-01    -2.223747950e-01    -1.482498633e-01

    k = +5.7154760664940829e+00
    s = -3.1433011119429657e+00
    t = +3.4591634777518065e-01


    icept_pt = lp0 + k * norm[ lpr ]
             = < -3.333333333e-01, +7.666666667e+00, +3.333333333e-01 >

    icept_pt = pl0 + s * plun + t * plvn
             = < -3.333333333e-01, +7.666666667e+00, +3.333333333e-01 >
     : line_plane_icept() returns 1

     : intercept = ( -3.333333333e-01, +7.666666667e+00, +3.333333333e-01 )


--------------------------------------------------


INFO : line_plane_icept()
     : with not normalized plane_u
     : also not normalized plane_v
     : u = +0.000000000e+00    -2.000000000e+00    +3.000000000e+00
     : v = -1.300000000e+01    -3.000000000e+00    -2.000000000e+00

    k = +5.7154760664940829e+00
    s = -3.1433011119429657e+00
    t = +3.4591634777518065e-01


    icept_pt = lp0 + k * norm[ lpr ]
             = < -3.333333333e-01, +7.666666667e+00, +3.333333333e-01 >

    icept_pt = pl0 + s * plun + t * plvn
             = < -3.333333333e-01, +7.666666667e+00, +3.333333333e-01 >
     : line_plane_icept() returns 1

     : intercept = ( -3.333333333e-01, +7.666666667e+00, +3.333333333e-01 )


--------------------------------------------------


INFO : line_plane_icept()
     : with not normalized plane_u
     : also NULL pointer plane_v
     : u = +0.000000000e+00    -2.000000000e+00    +3.000000000e+00
     : v = NULL pointer

    k = +5.7154760664940829e+00
    s = -3.1433011119429657e+00
    t = +3.4591634777518065e-01


    icept_pt = lp0 + k * norm[ lpr ]
             = < -3.333333333e-01, +7.666666667e+00, +3.333333333e-01 >

    icept_pt = pl0 + s * plun + t * plvn
             = < -3.333333333e-01, +7.666666667e+00, +3.333333333e-01 >
     : line_plane_icept() returns 1

     : intercept = ( -3.333333333e-01, +7.666666667e+00, +3.333333333e-01 )


--------------------------------------------------


INFO : line_plane_icept()
     : with NULL plane_u
     : also not normalized plane_v
     : u = NULL pointer
     : v = -1.300000000e+01    -3.000000000e+00    -2.000000000e+00
    k = +5.7154760664940829e+00
    s = +3.1433011119429657e+00
    t = +3.4591634777518065e-01


    icept_pt = lp0 + k * norm[ lpr ]
             = < -3.333333333e-01, +7.666666667e+00, +3.333333333e-01 >

    icept_pt = pl0 + s * plun + t * plvn
             = < -3.333333333e-01, +7.666666667e+00, +3.333333333e-01 >
     : line_plane_icept() returns 1

     : intercept = ( -3.333333333e-01, +7.666666667e+00, +3.333333333e-01 )


--------------------------------------------------


INFO : line_plane_icept()
     : with NULL plane_u
     : also NULL plane_v
     : u = NULL pointer
     : v = NULL pointer
     : line_point = ( -13, 1, 4 )

    k = +0.0000000000000000e+00
    s = +3.6055512754639900e+00
    t = +1.3490737563232043e+01


    icept_pt = lp0 + k * norm[ lpr ]
             = < -1.300000000e+01, +1.000000000e+00, +4.000000000e+00 >

    icept_pt = pl0 + s * plun + t * plvn
             = < -1.300000000e+01, +1.000000000e+00, +4.000000000e+00 >
     : line_plane_icept() returns 1

     : intercept = ( -1.300000000e+01, +1.000000000e+00, +4.000000000e+00 )


--------------------------------------------------


INFO : line_plane_icept()
     : with plane at ( 0, 8, 0)
     : plane normal < 0, -1, 0>

     : line point ( 0, 0, 0)
     : line dir < 0, 1, 0>

     : u = +1.000000000e+00    +0.000000000e+00    +0.000000000e+00
     : v = +0.000000000e+00    +0.000000000e+00    +1.000000000e+00
    k = +8.0000000000000000e+00
    s = -0.0000000000000000e+00
    t = -0.0000000000000000e+00


    icept_pt = lp0 + k * norm[ lpr ]
             = < +0.000000000e+00, +8.000000000e+00, +0.000000000e+00 >

    icept_pt = pl0 + s * plun + t * plvn
             = < +0.000000000e+00, +8.000000000e+00, +0.000000000e+00 >
     : line_plane_icept() returns 1

     : intercept = ( +0.000000000e+00, +8.000000000e+00, +0.000000000e+00 )


--------------------------------------------------
