
At this point thanks to chat and Jefferson and guys like theddmage  :

vesta$ 
vesta$ valgrind --leak-check=full ./test_cplex > /dev/null
==96678== Memcheck, a memory error detector
==96678== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al.
==96678== Using Valgrind-3.10.1 and LibVEX; rerun with -h for copyright info
.
.
.



Cramers rule test with existing matrix and
rh_col = < ( 1, 0.5 ), ( 2, 0.75 ), ( 3, -0.25 ) >
     : result col = < ( 5.857651245552e-01, 5.455516014235e-01 ),
                      ( -1.992882562278e-02, 1.937722419929e-01 ),
                      ( -4.056939501779e-02, -4.001779359431e-01 ) >

see https://www.wolframalpha.com/input/?i=Solve+for+A%2CB%2CC+where+%28+0.5+-+i+%29+*+A++-+2+*+B+-+3+*+C+%3D+%28+1+%2B+0.5i+%29%2C+4+*+A+%2B+5+*+B+%2B+6+*+C+%3D+%28+2+%2B+0.75i+%29%2C++7+*+A+%2B+%28+-2+%2B+4i+%29+*+B+%2B+9+*+C+%3D+%28+3+-0.25i+%29.

boe13$ 
boe13$ echo '14k 823 1405/p 1533 2810 / pq' | dc 
.58576512455516
.54555160142348
boe13$ 
boe13$ echo '14k _28 1405/p 1089 5620 / pq' | dc 
-.01992882562277
.19377224199288
boe13$ 
boe13$ echo '14k _57 1405/p _2249 5620 / pq' | dc 
-.04056939501779
-.40017793594306
boe13$ 




-------- 2020 01 21 line plane intercept testing 

New matrix with line plane intercept data.
dbug : row 1 =    -4.082482905e-01    +0.000000000e+00    -9.636241117e-01
     : row 2 =    +8.164965809e-01    -5.547001962e-01    -2.223747950e-01
     : row 3 =    +4.082482905e-01    +8.320502943e-01    -1.482498633e-01

     :   det =    -9.819805061e-01, 0 )

Solve for line plane intercept with Cramers rule.

    k = +5.7154760664940829e+00
    s = -3.1433011119429657e+00
    t = +3.4591634777518065e-01


