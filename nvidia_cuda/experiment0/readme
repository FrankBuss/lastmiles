

C_nix$ dpkg-query -l | grep 'NVIDIA Performance Primitive' | cut -c1-130
ii  libnppc10:amd64                       10.1.105-3+b1                   amd64        NVIDIA Performance Primitives core runtime 
ii  libnppial10:amd64                     10.1.105-3+b1                   amd64        NVIDIA Performance Primitives lib for Image
ii  libnppicc10:amd64                     10.1.105-3+b1                   amd64        NVIDIA Performance Primitives lib for Image
ii  libnppicom10:amd64                    10.1.105-3+b1                   amd64        NVIDIA Performance Primitives lib for Image
ii  libnppidei10:amd64                    10.1.105-3+b1                   amd64        NVIDIA Performance Primitives lib for Image
ii  libnppif10:amd64                      10.1.105-3+b1                   amd64        NVIDIA Performance Primitives lib for Image
ii  libnppig10:amd64                      10.1.105-3+b1                   amd64        NVIDIA Performance Primitives lib for Image
ii  libnppim10:amd64                      10.1.105-3+b1                   amd64        NVIDIA Performance Primitives lib for Image
ii  libnppist10:amd64                     10.1.105-3+b1                   amd64        NVIDIA Performance Primitives lib for Image
ii  libnppisu10:amd64                     10.1.105-3+b1                   amd64        NVIDIA Performance Primitives lib for Image
ii  libnppitc10:amd64                     10.1.105-3+b1                   amd64        NVIDIA Performance Primitives lib for Image
ii  libnpps10:amd64                       10.1.105-3+b1                   amd64        NVIDIA Performance Primitives for signal pr
C_nix$ 
C_nix$ nvidia-smi
Fri Sep 27 16:10:48 2019       
+-----------------------------------------------------------------------------+
| NVIDIA-SMI 430.50       Driver Version: 430.50       CUDA Version: 10.1     |
|-------------------------------+----------------------+----------------------+
| GPU  Name        Persistence-M| Bus-Id        Disp.A | Volatile Uncorr. ECC |
| Fan  Temp  Perf  Pwr:Usage/Cap|         Memory-Usage | GPU-Util  Compute M. |
|===============================+======================+======================|
|   0  Quadro K4200        On   | 00000000:01:00.0  On |                  N/A |
| 30%   36C    P8    17W / 110W |     85MiB /  4035MiB |      0%      Default |
+-------------------------------+----------------------+----------------------+
                                                                               
+-----------------------------------------------------------------------------+
| Processes:                                                       GPU Memory |
|  GPU       PID   Type   Process name                             Usage      |
|=============================================================================|
|    0       705      G   /usr/lib/xorg/Xorg                            81MiB |
+-----------------------------------------------------------------------------+


currently there is a device profile issue :

https://developer.nvidia.com/nvidia-development-tools-solutions-ERR_NVGPUCTRPERM-permission-issue-performance-counters


the output with device info should be something like 

nix$ 
nix$ nvcc --version 
nvcc: NVIDIA (R) Cuda compiler driver
Copyright (c) 2005-2019 NVIDIA Corporation
Built on Fri_Feb__8_19:08:17_PST_2019
Cuda compilation tools, release 10.1, V10.1.105
nix$ 
nix$ nvcc -ccbin g++ -I./inc -m64 -gencode arch=compute_30,code=sm_30 -lnppi_static -lculibos -c -o dev_info.o dev_info.cpp 
nix$ nvcc -ccbin g++ -m64 -gencode arch=compute_30,code=sm_30 -o dev_info dev_info.o
nix$ ./dev_info 

 *** CUDA Device Query (Runtime API) ***
INFO : CUDART_VERSION defined as 10010
INFO : we may be using CUDART static linking
INFO : NPP_VERSION_MAJOR defined as 10
INFO : NPP_VERSION_MINOR defined as 1
     : (NPP_VERSION_MAJOR << 12) + (NPP_VERSION_MINOR << 4) >= 0x6000
     : signal and image processing functions are available.
INFO : Detected 1 CUDA Capable device(s)
INFO : dev number 0: name = "Quadro K4200"
     : CUDA Driver Version    10.1
     : CUDA Runtime Version   10.1
     : CUDA Capability Major/Minor version 3.0
     :      : Total global memory: 4035 MBytes (4231266304 bytes)
     : ( 7) Multiprocessors, (192) CUDA Cores/MP: 1344 CUDA Cores
     : GPU Max Clock rate: 784 MHz (0.78 GHz)
     : Memory Clock rate: 2700 Mhz
     : Memory Bus Width: 256-bit
     : L2 Cache Size: 524288 bytes
     : Maximum Texture Dimension Size (x,y,z) 1D=(65536), 2D=(65536, 65536), 3D=(4096, 4096, 4096)
     : Maximum Layered 1D Texture Size, (num) layers  1D=(16384), 2048 layers
     : Maximum Layered 2D Texture Size, (num) layers  2D=(16384, 16384), 2048 layers
     : constant memory: 65536 bytes
     : shared memory per block: 49152 bytes
     : registers available per block: 65536
     : warp size: 32
  Maximum number of threads per multiprocessor:  2048
  Maximum number of threads per block:           1024
  Max dimension size of a thread block (x,y,z): (1024, 1024, 64)
  Max dimension size of a grid size    (x,y,z): (2147483647, 65535, 65535)
  Maximum memory pitch:                          2147483647 bytes
  Texture alignment:                             512 bytes
  Concurrent copy and kernel execution:          Yes with 2 copy engine(s)
  Run time limit on kernels:                     Yes
  Integrated GPU sharing Host Memory:            No
  Support host page-locked memory mapping:       Yes
  Alignment requirement for Surfaces:            Yes
  Device has ECC support:                        Disabled
  Device supports Unified Addressing (UVA):      Yes
  Supports Cooperative Kernel Launch:            No
  Supports MultiDevice Co-op Kernel Launch:      No
  Device PCI Domain ID / Bus ID / location ID:   0 / 1 / 0
  Compute Mode:
     < Default (multiple host threads can use ::cudaSetDevice() with device simultaneously) >

deviceQuery, CUDA Driver = CUDART, CUDA Driver Version = 10.1, CUDA Runtime Version = 10.1, NumDevs = 1
Result = PASS
nix$ 


 **************************************************************************


nix$ 
nix$ uname -a 
Linux nix 4.19.0-5-amd64 #1 SMP Debian 4.19.37-6 (2019-07-18) x86_64 GNU/Linux
nix$ nvcc --version 
nvcc: NVIDIA (R) Cuda compiler driver
Copyright (c) 2005-2019 NVIDIA Corporation
Built on Fri_Feb__8_19:08:17_PST_2019
Cuda compilation tools, release 10.1, V10.1.105
nix$ 
nix$ nvidia-smi
Sat Jul 20 03:12:37 2019       
+-----------------------------------------------------------------------------+
| NVIDIA-SMI 418.74       Driver Version: 418.74       CUDA Version: 10.1     |
|-------------------------------+----------------------+----------------------+
| GPU  Name        Persistence-M| Bus-Id        Disp.A | Volatile Uncorr. ECC |
| Fan  Temp  Perf  Pwr:Usage/Cap|         Memory-Usage | GPU-Util  Compute M. |
|===============================+======================+======================|
|   0  Quadro K4200        On   | 00000000:01:00.0  On |                  N/A |
| 31%   44C    P8    17W / 110W |    118MiB /  4035MiB |      3%      Default |
+-------------------------------+----------------------+----------------------+
                                                                               
+-----------------------------------------------------------------------------+
| Processes:                                                       GPU Memory |
|  GPU       PID   Type   Process name                             Usage      |
|=============================================================================|
|    0      1082      G   /usr/lib/xorg/Xorg                            98MiB |
|    0     10601      G   ...ke/.local/share/Steam/ubuntu12_32/steam    12MiB |
|    0     10624      G   ./steamwebhelper                               2MiB |
+-----------------------------------------------------------------------------+
nix$ 
nix$ nvcc -ccbin g++ -I./inc -m64 -gencode arch=compute_30,code=sm_30 -c -o vadd.o vadd.cu 
nix$ nvcc -ccbin g++ -m64 -gencode arch=compute_30,code=sm_30 -o vadd vadd.o -lgomp
nix$ 
nix$ nvprof ./vadd

---------+---------+---------+---------+---------+---------+---------+--
==11252== NVPROF is profiling process 11252, command: ./vadd
INFO : number of host CPUs:     2
INFO : number of CUDA devices:  1
     :    0: Quadro K4200
---------+---------+---------+---------+---------+---------+---------+--
[Vector addition of 500000 elements]
INFO : Copy of vector A from host to device done.
INFO : Copy of vector B from host to device done.
CUDA kernel launch with 489 blocks of 1024 threads
INFO : vectorAdd done.
INFO : Copy output data from CUDA device to host memory done.
INFO : A + B correct within error epsilon = 1e-09
Done
==11252== Warning: The user does not have permission to profile on the target device. See the following link for instructions to enable permissions and get more information: https://developer.nvidia.com/NVSOLN1000 
==11252== Profiling application: ./vadd
==11252== Profiling result:
No kernels were profiled.
No API activities were profiled.
==11252== Warning: Some profiling data are not recorded. Make sure cudaProfilerStop() or cuProfilerStop() is called before application exit to flush profile data.
nix$ 

********************************************************************



previous version looks like : 

nix$ 
nix$ nvcc -ccbin g++ -I./inc -m64 -gencode arch=compute_30,code=sm_30 -c -o vadd.o vadd.cu 
nix$ nvcc -ccbin g++ -m64 -gencode arch=compute_30,code=sm_30 -o vadd vadd.o -lgomp
nix$ 
nix$ nvprof ./vadd

---------+---------+---------+---------+---------+---------+---------+--
==7666== NVPROF is profiling process 7666, command: ./vadd
INFO : number of host CPUs:     2
INFO : number of CUDA devices:  1
     :    0: Quadro K4200
---------+---------+---------+---------+---------+---------+---------+--
[Vector addition of 500000 elements]
INFO : Copy of vector A from host to device done.
INFO : Copy of vector B from host to device done.
CUDA kernel launch with 489 blocks of 1024 threads
INFO : vectorAdd done.
INFO : Copy output data from CUDA device to host memory done.
INFO : A + B correct within error epsilon = 1e-09
Done
==7666== Profiling application: ./vadd
==7666== Profiling result:
            Type  Time(%)      Time     Calls       Avg       Min       Max  Name
 GPU activities:   62.84%  610.52us         2  305.26us  305.05us  305.47us  [CUDA memcpy HtoD]
                   30.98%  300.96us         1  300.96us  300.96us  300.96us  [CUDA memcpy DtoH]
                    6.18%  60.064us         1  60.064us  60.064us  60.064us  vectorAdd(float const *, float const *, float*, int)
      API calls:   91.01%  52.933ms         3  17.644ms  104.95us  52.718ms  cudaMalloc
                    3.18%  1.8500ms         3  616.66us  183.96us  1.2790ms  cudaMemcpy
                    2.18%  1.2682ms         1  1.2682ms  1.2682ms  1.2682ms  cudaGetDeviceProperties
                    1.94%  1.1269ms        96  11.738us     475ns  510.47us  cuDeviceGetAttribute
                    0.82%  477.71us         1  477.71us  477.71us  477.71us  cuDeviceTotalMem
                    0.55%  321.84us         3  107.28us  86.092us  140.83us  cudaFree
                    0.24%  138.18us         1  138.18us  138.18us  138.18us  cuDeviceGetName
                    0.04%  24.351us         1  24.351us  24.351us  24.351us  cudaLaunchKernel
                    0.01%  7.1990us         3  2.3990us     578ns  3.6630us  cuDeviceGetCount
                    0.01%  5.2270us         2  2.6130us  1.0050us  4.2220us  cuDeviceGet
                    0.01%  5.0820us         1  5.0820us  5.0820us  5.0820us  cuDeviceGetPCIBusId
                    0.00%  2.5280us         1  2.5280us  2.5280us  2.5280us  cudaGetDeviceCount
                    0.00%     252ns         1     252ns     252ns     252ns  cudaGetLastError
nix$ 



---------------- note 

n.b.: the NVidia performance primitives are defined
       with linkage to

nix$ ls -lapb /usr/lib/x86_64-linux-gnu/libnppc*
lrwxrwxrwx 1 root root     13 Jul 10 05:07 /usr/lib/x86_64-linux-gnu/libnppc.so -> libnppc.so.10
lrwxrwxrwx 1 root root     19 Jul 10 05:07 /usr/lib/x86_64-linux-gnu/libnppc.so.10 -> libnppc.so.10.1.105
-rw-r--r-- 1 root root 497176 Feb 10 01:31 /usr/lib/x86_64-linux-gnu/libnppc.so.10.1.105
-rw-r--r-- 1 root root  32970 Feb 10 01:31 /usr/lib/x86_64-linux-gnu/libnppc_static.a

 see const NppLibraryVersion* nppGetLibVersion (void)       

       https://docs.nvidia.com/cuda/archive/9.2/npp/group__core__npp.html


nix$ apt-file search '/usr/lib/x86_64-linux-gnu/libnppc.so.9.2.148'
libnppc9.2: /usr/lib/x86_64-linux-gnu/libnppc.so.9.2.148
nix$ 
nix$ apt-cache search 'libnppc'
libnppc9.2 - NVIDIA Performance Primitives core runtime library
nix$ apt-cache search 'NVIDIA' |  grep -i 'performance'
libnppc9.2 - NVIDIA Performance Primitives core runtime library
libnppial9.2 - NVIDIA Performance Primitives lib for Image Arithmetic and Logic
libnppicc9.2 - NVIDIA Performance Primitives lib for Image Color Conversion
libnppicom9.2 - NVIDIA Performance Primitives lib for Image Compression
libnppidei9.2 - NVIDIA Performance Primitives lib for Image Data Exchange and Initialization
libnppif9.2 - NVIDIA Performance Primitives lib for Image Filters
libnppig9.2 - NVIDIA Performance Primitives lib for Image Geometry transforms
libnppim9.2 - NVIDIA Performance Primitives lib for Image Morphological operations
libnppist9.2 - NVIDIA Performance Primitives lib for Image Statistics
libnppisu9.2 - NVIDIA Performance Primitives lib for Image Support
libnppitc9.2 - NVIDIA Performance Primitives lib for Image Threshold and Compare
libnpps9.2 - NVIDIA Performance Primitives for signal processing runtime library
nix$ 


