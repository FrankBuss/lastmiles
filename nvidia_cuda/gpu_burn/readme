
For the NVidia CUDA Compiler to work you need to install the toolkit
on Debian stable : 

           styx# apt-get install nvidia-cuda-toolkit

That allows you to do this : 

$ nvcc -ccbin g++ -I ../include/ -m64 -gencode arch=compute_30,code=sm_30 -lnppi_static -lculibos -c -o dev_info.o dev_info.cpp
$ nvcc -ccbin g++ -m64 -gencode arch=compute_30,code=sm_30 -o dev_info dev_info.o


You don't need fancy expensive hardware for this to work and you can
even have a recent Lenovo laptop with a NVidia Quadro chip inside.
Just have recent Debian "stable" release as well as a few packages
and you are fine.

$ cat /etc/debian_version 
10.3
$ uname -a 
Linux styx 4.19.0-8-amd64 #1 SMP Debian 4.19.98-1 (2020-01-26) x86_64 GNU/Linux
$ 
$ 
$ ls 
dev_info  dev_info.cpp  dev_info.o  readme
$ 
$ ./dev_info 

 *** CUDA Device Query (Runtime API) ***
INFO : CUDART_VERSION defined as 9020
INFO : we may be using CUDART static linking
INFO : NPP_VERSION_MAJOR defined as 9
INFO : NPP_VERSION_MINOR defined as 2
     : (NPP_VERSION_MAJOR << 12) + (NPP_VERSION_MINOR << 4) >= 0x6000
     : signal and image processing functions are available.
INFO : Detected 1 CUDA Capable device(s)
INFO : dev number 0: name = "Quadro K1100M"
     : CUDA Driver Version    10.1
     : CUDA Runtime Version   9.2
     : CUDA Capability Major/Minor version 3.0
     : Total global memory: 2097086464 bytes
     : constant memory: 65536 bytes
     : multiprocessor count = 2
     : CUDA cores per multiprocessor = 192
     : total CUDA cores = 384
     : GPU max graphics clock rate: 705500 kHz
     : Memory Clock rate: 1400000 khz
     : Memory Bus Width: 128-bit
     : L2 Cache Size: 262144 bytes
     : Maximum Texture Dimension Size (x,y,z)
     :     1D=(65536)
     :     2D=(65536, 65536)
     :     3D=(4096, 4096, 4096)
     : Maximum Layered 1D Texture Size, (num) layers  1D=(16384), 2048 layers
     : Maximum Layered 2D Texture Size, (num) layers  2D=(16384, 16384), 2048 layers
     : shared memory per block: 49152 bytes
     : registers available per block: 65536
     : warp size: 32
     : max num threads per multiprocessor: 2048
     : max numb of threads per block: 1024
     : max dimension size of a thread block (x,y,z) = (1024, 1024, 64)
  Max dimension size of a grid size    (x,y,z): (2147483647, 65535, 65535)
  Maximum memory pitch:                          2147483647 bytes
  Texture alignment:                             512 bytes
  Concurrent copy and kernel execution:          Yes with 1 copy engine(s)
  Run time limit on kernels:                     No
  Integrated GPU sharing Host Memory:            No
   : host page-locked memory mapping: Yes
  Alignment requirement for Surfaces:            Yes
  Device has ECC support:                        Disabled
  Device supports Unified Addressing (UVA):      Yes
  Supports Cooperative Kernel Launch:            No
  Supports MultiDevice Co-op Kernel Launch:      No
  Device PCI Domain ID / Bus ID / location ID:   0 / 1 / 0
  Compute Mode:
     < Default (multiple host threads can use ::cudaSetDevice() with device simultaneously) >

deviceQuery, CUDA Driver = CUDART, CUDA Driver Version = 10.1, CUDA Runtime Version = 9.2, NumDevs = 1
Result = PASS
$ 


